<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-08-22T08:38:00+02:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Logs viewing with journalctl</title>
    <link rel="alternate" href="http://blog.url.com/logs-viewing-with-journalctl"/>
    <id>http://blog.url.com/logs-viewing-with-journalctl</id>
    <published>2014-08-22T08:38:00+02:00</published>
    <updated>2014-08-22T09:58:19+02:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;If you can't find syslog in &lt;code&gt;/var/log/messages&lt;/code&gt; (on Fedora-family dist) or &lt;code&gt;/var/syslog&lt;/code&gt; (Debian-family),
it is highly likely that your system makes use of systemd's journalctl.&lt;/p&gt;

&lt;p&gt;You can install rsyslog, but use it only when monitoring tools you're using rely on old log files hierarchy.&lt;/p&gt;

&lt;p&gt;For day-to-day use journalctl is very friendly to use:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Tab-completion:&lt;/p&gt;

&lt;pre&gt;&lt;code class="highlight plaintext"&gt;~ ❯❯❯ journalctl &amp;lt;TAB&amp;gt;
 -- possible fields --
CODE_FILE   MESSAGE_ID          USER_UNIT         _COMM            _KERNEL_SUBSYSTEM            _SYSTEMD_CGROUP      _TRANSPORT      __CURSOR
CODE_FUNC   PRIORITY            _AUDIT_LOGINUID   _EXE             _MACHINE_ID                  _SYSTEMD_OWNER_UID   _UDEV_DEVLINK   __MONOTONIC_TIMESTAMP
CODE_LINE   SYSLOG_FACILITY     _AUDIT_SESSION    _GID             _PID                         _SYSTEMD_SESSION     _UDEV_DEVNODE   __REALTIME_TIMESTAMP
ERRNO       SYSLOG_IDENTIFIER   _BOOT_ID          _HOSTNAME        _SELINUX_CONTEXT             _SYSTEMD_UNIT        _UDEV_SYSNAME
MESSAGE     SYSLOG_PID          _CMDLINE          _KERNEL_DEVICE   _SOURCE_REALTIME_TIMESTAMP   _SYSTEMD_USER_UNIT   _UID  
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Filter by application using &lt;code&gt;_COMM&lt;/code&gt;, ex.&lt;/p&gt;

&lt;pre&gt;&lt;code class="highlight plaintext"&gt;~ ❯❯❯ journalctl _COMM=anacron
-- Logs begin at Wed 2014-04-16 09:14:59 CEST, end at Fri 2014-08-22 09:01:09 CEST. --
Apr 16 09:48:35 localhost.localdomain anacron[1113]: Anacron started on 2014-04-16
Apr 16 09:48:35 localhost.localdomain anacron[1113]: Will run job `cron.daily' in 49 min.
Apr 16 09:48:35 localhost.localdomain anacron[1113]: Will run job `cron.weekly' in 69 min.
Apr 16 09:48:35 localhost.localdomain anacron[1113]: Will run job `cron.monthly' in 89 min.
Apr 16 09:48:35 localhost.localdomain anacron[1113]: Jobs will be executed sequentially
Apr 16 10:01:01 localhost.localdomain anacron[13065]: Anacron started on 2014-04-16
Apr 16 10:01:01 localhost.localdomain anacron[13065]: Will run job `cron.daily' in 5 min.
Apr 16 10:01:01 localhost.localdomain anacron[13065]: Will run job `cron.weekly' in 25 min.
Apr 16 10:01:01 localhost.localdomain anacron[13065]: Will run job `cron.monthly' in 45 min.
Apr 16 10:01:01 localhost.localdomain anacron[13065]: Jobs will be executed sequentially
Apr 16 10:06:01 localhost.localdomain anacron[13065]: Job `cron.daily' started
Apr 16 10:08:41 localhost.localdomain anacron[13065]: Job `cron.daily' terminated
-- Reboot --
Apr 16 10:22:37 localhost.localdomain anacron[1114]: Anacron started on 2014-04-16
Apr 16 10:22:37 localhost.localdomain anacron[1114]: Will run job `cron.daily' in 7 min.
Apr 16 10:22:37 localhost.localdomain anacron[1114]: Will run job `cron.weekly' in 27 min.
Apr 16 10:22:37 localhost.localdomain anacron[1114]: Will run job `cron.monthly' in 47 min.
Apr 16 10:22:37 localhost.localdomain anacron[1114]: Jobs will be executed sequentially
Apr 16 10:29:37 localhost.localdomain anacron[1114]: Job `cron.daily' started
Apr 16 10:29:38 localhost.localdomain anacron[1114]: Job `cron.daily' terminated (mailing output)
...
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Filter additionally by time range using &lt;code&gt;--since&lt;/code&gt; and &lt;code&gt;--until&lt;/code&gt;.&lt;br /&gt;
ex. for last two days&lt;/p&gt;

&lt;pre&gt;&lt;code class="highlight plaintext"&gt;~ ❯❯❯ journalctl _COMM=anacron --since=-2d
-- Logs begin at Wed 2014-04-16 09:14:59 CEST, end at Fri 2014-08-22 09:50:05 CEST. --
Aug 21 09:01:01 localhost.localdomain anacron[4620]: Anacron started on 2014-08-21
Aug 21 09:01:01 localhost.localdomain anacron[4620]: Will run job `cron.daily' in 15 min.
Aug 21 09:01:01 localhost.localdomain anacron[4620]: Jobs will be executed sequentially
Aug 21 09:16:01 localhost.localdomain anacron[4620]: Job `cron.daily' started
Aug 21 09:18:09 localhost.localdomain anacron[4620]: Job `cron.daily' terminated (mailing output)
Aug 21 09:18:09 localhost.localdomain anacron[4620]: Normal exit (1 job run)
-- Reboot --
Aug 22 08:01:01 localhost.localdomain anacron[2812]: Anacron started on 2014-08-22
Aug 22 08:01:01 localhost.localdomain anacron[2812]: Will run job `cron.daily' in 29 min.
Aug 22 08:01:01 localhost.localdomain anacron[2812]: Jobs will be executed sequentially
Aug 22 08:30:01 localhost.localdomain anacron[2812]: Job `cron.daily' started
Aug 22 08:32:18 localhost.localdomain anacron[2812]: Job `cron.daily' terminated (mailing output)
Aug 22 08:32:18 localhost.localdomain anacron[2812]: Normal exit (1 job run)
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For more options check &lt;code&gt;man journalctl&lt;/code&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Manage your dotfiles with ease</title>
    <link rel="alternate" href="http://blog.url.com/manage-your-dotfiles-with-ease"/>
    <id>http://blog.url.com/manage-your-dotfiles-with-ease</id>
    <published>2014-08-14T16:01:00+02:00</published>
    <updated>2014-08-22T09:58:53+02:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;There are are two main steps required to easily manage dotfiles (between machines or installations):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Keeping it in sync beetween computers with git repository&lt;/li&gt;
  &lt;li&gt;Having script which takes care of linking files in dotfiles repo folder to their proper locations in the system.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While setting git repo for our dotfiles is simple, writing a linking script isn't so obvious.&lt;/p&gt;

&lt;p&gt;Usually adding new files to dotfile folder imply modifying a script which makes it hard to manage over time as it grows.
My idea was to write a self-managable dotfile repo, which structure mirror the file structure on the local OS (repo has one &lt;code&gt;home&lt;/code&gt; folder).
Additionally I decided to link only files, not directories, because you may want to have some files in shared dotfiles folder only on one local machine.&lt;/p&gt;

&lt;p&gt;In result you don't have to change a script when you add new dotfiles as long as you keep file hierarchy in a repo the same as in the system.
Look at the source:&lt;/p&gt;

&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="c1"&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'fileutils'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'pathname'&lt;/span&gt;

&lt;span class="c1"&gt;# Recursively link files from source to target directory&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;linkify&lt;/span&gt; &lt;span class="n"&gt;source_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target_path&lt;/span&gt;
  &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;FNM_DOTMATCH&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;src_fn_path&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;src_pn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Pathname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="n"&gt;src_fn_path&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="sx"&gt;%w(. ..)&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include?&lt;/span&gt; &lt;span class="n"&gt;src_pn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;src_pn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;directory?&lt;/span&gt;
      &lt;span class="no"&gt;FileUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;mkdir_p&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;src_pn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;linkify&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;src_pn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;src_pn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="no"&gt;FileUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ln_s&lt;/span&gt; &lt;span class="n"&gt;src_pn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;src_pn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="ss"&gt;force: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;linkify&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="s1"&gt;'home'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'HOME'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Whenever you add new dotfiles to your repo , just run this script and you're good to go.&lt;/p&gt;

&lt;p&gt;Here is &lt;a href="https://github.com/Gee-Bee/dotfiles"&gt;my dotfiles repo&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
